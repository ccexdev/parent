import org.openapitools.generator.gradle.plugin.tasks.GenerateTask

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.3' apply false
    id 'io.spring.dependency-management' version '1.1.7' apply false
    id 'org.openapi.generator' version "7.3.0" apply false
}

allprojects {
    group = 'bg.coincraft'
    version = '0.0.1-SNAPSHOT'

    repositories {
        mavenCentral()
    }

}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.openapi.generator'

    dependencies {
        // Openapi
        implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.9'
        implementation "org.openapitools:jackson-databind-nullable:0.2.6"

        // Lombok
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        // Test containers
        testImplementation 'org.testcontainers:testcontainers'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'org.springframework.boot:spring-boot-testcontainers'
        testImplementation 'org.testcontainers:junit-jupiter'
        testImplementation 'org.testcontainers:postgresql'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    }

    bootJar {
        enabled = false
    }

    jar {
        enabled = true
    }

    tasks.register('buildServerCode', GenerateTask) {
        generatorName = "spring"
        templateDir = "$rootDir/openapi/templates".toString()

        enablePostProcessFile = true
        skipOverwrite = false
        modelNameSuffix = "DTO"

        configOptions = [
                delegatePattern               : "true",
                async                         : "false",
                useOptional                   : "true",
                java8                         : "true",
                dateLibrary                   : "java8",
                serializationLibrary          : "jackson",
                library                       : "spring-boot",
                useBeanValidation             : "true",
                interfaceOnly                 : "false",
                serializableModel             : "true",
                withXml                       : "false",
                useTags                       : "true",
                unhandledException            : "true",
                additionalModelTypeAnnotations: "@lombok.Builder(setterPrefix = \"set\")",
                useJakartaEe                  : "true",
                useSpringBoot3                : "true"
        ]
    }

    sourceSets {
        integrationTest {
            java {
                srcDir 'src/integration-test/java'
            }

            resources {
                srcDir 'src/integration-test/resources'
            }

            compileClasspath += sourceSets.main.output + configurations.testRuntimeClasspath
            runtimeClasspath += output + compileClasspath
        }
    }

    configurations {
        integrationTestImplementation.extendsFrom testImplementation
        integrationTestRuntimeOnly.extendsFrom testRuntimeOnly
        integrationTestCompileOnly.extendsFrom compileOnly
        integrationTestAnnotationProcessor.extendsFrom annotationProcessor
    }

    task integrationTest(type: Test) {
        dependsOn compileJava
        testClassesDirs = sourceSets.integrationTest.output.classesDirs
        classpath = sourceSets.integrationTest.runtimeClasspath
        shouldRunAfter test
        outputs.upToDateWhen { false }
        useJUnitPlatform()
    }

    check.dependsOn integrationTest
}
